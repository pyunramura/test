---
name: Create Release

on:
  push:
    branches: [ main ]
  # pull_request:
  #   types: [ assigned, opened, synchronize, reopened ]
  #   branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Lint Dockerfile
        uses: luke142367/Docker-Lint-Action@v1.0.0
        with:
          target: Dockerfile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Lint Yaml
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: docker-compose.yaml
          config_data: |
            extends: default
            rules:
              new-line-at-end-of-file: disable
              trailing-spaces:
                level: warning
      - name: Lint Shell Script
        uses: azohra/shell-linter@latest
        with:
          path: "run.sh,run,/**/*.sh"

  # release:
  #   needs: [ lint ]
  #   runs-on: ubuntu-latest
  #   outputs:
  #         new_version: ${{ steps.bump-semver.outputs.new_version }}
  #   steps:
  #     - uses: actions/checkout@v2

  #     - uses: actions-ecosystem/action-get-merged-pull-request@v1
  #       id: get-merged-pull-request
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}

  #     - uses: actions-ecosystem/action-release-label@v1
  #       id: release-label
  #       if: ${{ steps.get-merged-pull-request.outputs.title != null }}
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         labels: ${{ steps.get-merged-pull-request.outputs.labels }}

  #     - uses: actions-ecosystem/action-get-latest-tag@v1
  #       id: get-latest-tag
  #       if: ${{ steps.release-label.outputs.level != null }}
  #       with:
  #         semver_only: true

  #     - uses: actions-ecosystem/action-bump-semver@v1
  #       id: bump-semver
  #       if: ${{ steps.release-label.outputs.level != null }}
  #       with:
  #         current_version: ${{ steps.get-latest-tag.outputs.tag }}
  #         level: ${{ steps.release-label.outputs.level }}

  #     - uses: actions-ecosystem/action-regex-match@v2
  #       id: regex-match
  #       if: ${{ steps.bump-semver.outputs.new_version != null }}
  #       with:
  #         text: ${{ steps.get-merged-pull-request.outputs.body }}
  #         regex: '```release_note([\s\S]*)```'

  #     - uses: actions-ecosystem/action-push-tag@v1
  #       if: ${{ steps.bump-semver.outputs.new_version != null }}
  #       with:
  #         tag: ${{ steps.bump-semver.outputs.new_version }}
  #         message: "${{ steps.bump-semver.outputs.new_version }}: PR #${{ steps.get-merged-pull-request.outputs.number }} ${{ steps.get-merged-pull-request.outputs.title }}"

  #     - uses: actions/create-release@v1
  #       if: ${{ steps.release-label.outputs.level == 'major' || steps.release-label.outputs.level == 'minor' }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ steps.bump-semver.outputs.new_version }}
  #         release_name: ${{ steps.bump-semver.outputs.new_version }}
  #         body: ${{ steps.regex-match.outputs.group1 }}

  #     - uses: actions-ecosystem/action-create-comment@v1
  #       if: ${{ steps.bump-semver.outputs.new_version != null }}
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         number: ${{ steps.get-merged-pull-request.outputs.number }}
  #         body: |
  #           The new version [${{ steps.bump-semver.outputs.new_version }}](https://github.com/${{ github.repository }}/releases/tag/${{ steps.bump-semver.outputs.new_version }}) has been released :tada:

  # ship:
  #   needs: [ lint, release ]
  #   runs-on: ubuntu-latest
  #   # env:
  #   #   - app: test-app
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1 
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v1 
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.CR_PAT }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v2
  #       if: ${{ needs.release.outputs.new_version != null }}
  #       with:
  #         context: .
  #         platforms: linux/amd64,linux/arm64
  #         push: true
  #         tags: |
  #           ${{ secrets.DOCKERHUB_USERNAME }}/testfugu:latest
  #           ${{ secrets.DOCKERHUB_USERNAME }}/test:${{ needs.release.outputs.new_version }}
  #           ghcr.io/${{ github.repository_owner }}/test:latest
  #           ghcr.io/${{ github.repository_owner }}/test:${{ needs.release.outputs.new_version }}
